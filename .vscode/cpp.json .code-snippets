{
	// Place your cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"cppsnip4": {
		"prefix": "cptemplate",
		"body": [
		  "/* semper fi */",
		  "#pragma GCC optimize(\"O3,unroll-loops\")",
		  " ",
		  "#include<bits/stdc++.h>",
		  "#include<ext/pb_ds/assoc_container.hpp>",
		  "#include<ext/pb_ds/tree_policy.hpp>",
		  " ",
		  "using namespace std;",
		  "using namespace chrono;",
		  "using namespace __gnu_pbds;",
		  " ",
		  "#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)",
		  "#define MOD 1000000007",
		  "#define MOD1 998244353",
		  "#define INF 1e18",
		  "#define nline \"\\n\"",
		  "#define pb push_back",
		  "#define ppb pop_back",
		  "#define mp make_pair",
		  "#define ff first",
		  "#define ss second",
		  "#define PI 3.141592653589793238462",
		  "#define set_bits(x) __builtin_popcountll(x)",
		  "#define sz(x) ((int)(x).size())",
		  "#define all(x) (x).begin(), (x).end()",
		  " ",
		  "#ifdef ABDREAMS",
		  "#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;",
		  "#else",
		  "#define debug(x);",
		  "#endif",
		  " ",
		  "using ll = long long;",
		  "using ull = unsigned long long;",
		  "using lld = long double;",
		  "typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key",
		  " ",
		  "void _print(ll t) {cerr << t;}",
		  "void _print(int t) {cerr << t;}",
		  "void _print(string t) {cerr << t;}",
		  "void _print(char t) {cerr << t;}",
		  "void _print(lld t) {cerr << t;}",
		  "void _print(double t) {cerr << t;}",
		  "void _print(ull t) {cerr << t;}",
		  " ",
		  "template <class T, class V> void _print(pair <T, V> p);",
		  "template <class T> void _print(vector <T> v);",
		  "template <class T> void _print(set <T> v);",
		  "template <class T, class V> void _print(map <T, V> v);",
		  "template <class T> void _print(multiset <T> v);",
		  "template <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}",
		  "template <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "template <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  "void _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}",
		  " ",
		  "mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());",
		  "/*---------------------------------------------------------------------------------------------------------------------------*/",
		  "ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}",
		  "ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}",
		  "void extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3",
		  "ll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b",
		  "ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}",
		  "bool revsort(ll a, ll b) {return a > b;}",
		  "ll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}",
		  "void google(int t) {cout << \"Case #\" << t << \": \";}",
		  "vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}",
		  "ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}",
		  "ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}",
		  "ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}",
		  "ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m",
		  "ll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))",
		  "ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);} ",
		  "/*--------------------------------------------------------------------------------------------------------------------------*/",
		  "int maxM = 2e5 + 5;",
		  "void ab_d(){",
		  "    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\",\"r\",stdin);",
		  "    freopen(\"output.txt\",\"w\",stdout);",
		  "#endif",
		  "}",
		  "int main() {",
		  "ab_d();",
		  "#ifdef ABDREAMS",
		  "    freopen(\"Error.txt\", \"w\", stderr);",
		  "#endif",
		  "    fastio();",
		  "    auto start1 = high_resolution_clock::now();",
		  "    solve();",
		  "    auto stop1 = high_resolution_clock::now();",
		  "    auto duration = duration_cast<microseconds>(stop1 - start1);",
		  "#ifdef ABDREAMS",
		  "    cerr << \"Time: \" << duration . count() / 1000 << \" ms\" << endl;",
		  "#endif",
		  "}"
		],
		"description": "cppsnip4"
	  },
	  "cppsnip2": {
		"prefix": "oldisgold",
		"body": [
		  "#include<bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "int main(){",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\",\"r\",stdin);",
		  "    freopen(\"output.txt\",\"w\",stdout);",
		  "#endif",
		  "    int n;",
		  "    cin>>n; //no of elements in array",
		  "    vector<int>arr;",
		  "",
		  "    for(int i=0;i<n;i++){",
		  "        int x;",
		  "        cin>>x;",
		  "        arr.push_back(x);",
		  "    }",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": ""
	  },
	  "cppsinp3": {
		"prefix": "altboilerplate",
		"body": [
		  "// semper fi //",
		  "// abdreams //",
		  "// ",
		  "",
		  "#include <bits/stdc++.h>",
		  "#include <ext/pb_ds/assoc_container.hpp>",
		  "",
		  "using namespace __gnu_pbds;",
		  "using namespace std;",
		  "",
		  "#define int long long",
		  "#define setbits(x)      __builtin_popcountll(x)",
		  "#define mod             1000000007",
		  "#define inf             1e18",
		  "#define w(x)            int x; cin>>x; while(x--)",
		  
		  "",
		  "typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;",
		  "",
		  "void ab_d(){",
		  "    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\",\"r\",stdin);",
		  "    freopen(\"output.txt\",\"w\",stdout);",
		  "#endif",
		  "}",
		  "",
		  "int32_t main(){",
		  "ab_d();",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "cppsinp3"
	  },"cppsnipnew": {
		"prefix": "boilerplate",
		"body": [
		  "#include <bits/stdc++.h>",
		  "#include <ext/pb_ds/assoc_container.hpp>",
		  "",
		  "using namespace __gnu_pbds;",
		  "using namespace std;",
		  "",
		  "#define int                     long long",
		  "#define mod                     (int)1e9+7",
		  "#define inf                     (int)1e18",
		  "#define w(x)                    int x; cin>>x; while(x--)",
		  "#define setbits(x)              __builtin_popcountll(x)",
		  "#define msb_position(x)         (x ? 63 - __builtin_clzll(x) : -1)",
		  "//MSB:: Adjust the constant if you're working with a different integer size. Answer in 0 based indexing.",
		  "#define all(var)                var.begin(), var.end()",
		  "#define INP_VECTOR(arr, n) \\",
		  "                                vector<int>arr(n,0); \\",
		  "                                for (int i = 0; i < n; ++i) { \\",
		  "                                    cin >> arr[i]; \\",
		  "                                }",
		  "#define FAST_IO()               ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)",
		  "",
		  "",
		  "typedef vector<int>             vi;",
		  "typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;",
		  "// *s.find_by_order(), order_of_key()",
		  "// order_of_key (val): returns the no. of values less than val",
		  "// find_by_order (k): returns the kth largest element.(0-based)",
		  "",
		  "int32_t main(){",
		  "FAST_IO();",
		  "",
		  "    ",
		  "",
		  "    return 0;",
		  "}",
		  "",
		  "",
		  ""
		],
		"description": "cppsnipnew"
	  }
	  }
}